
name: task_manager

services:
  db:
    image: postgres:latest
    volumes:
      - ${LOCATION:-./app_data}/postgres:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-task-manager}
    ports:
      - "5435:5432"
    restart: always
    networks:
      - default

  task-manager-server:
    container_name: task_manager_server
    image: ghcr.io/turtleold/task_manager:main
    volumes:
      - ${LOCATION:-./app_data}:/app_data/files
    command: sh -c "python manage.py migrate --noinput && python manage.py collectstatic --noinput && daphne task_manager.asgi:application --port ${PORT:-8000} --bind 0.0.0.0 -v2"
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
#    expose:
#      - "8001"
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/task-manager}
      SECRET_KEY: ${SECRET_KEY:-}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS:-localhost,127.0.0.1}
      CHAT_ID: ${CHAT_ID:-}
      BROKER_URL: ${BROKER_URL:-redis://localhost:6379}
    depends_on:
      - redis
      - db
    restart: on-failure
    networks:
      - default

  worker-celery:
    image: ghcr.io/turtleold/task_manager:main
    container_name: task_manager_celery
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A task_manager worker -l INFO
    env_file:
      - .env
    volumes:
      - ${LOCATION:-./app_data}:/app_data/files
    environment:
      BROKER_URL: ${BROKER_URL:-redis://redis:6379}
    depends_on:
      - redis
    restart: on-failure
    networks:
      - default

  flower:
    image: mher/flower:latest
    container_name: task_manager_flower
    command: celery flower --persisten=True
    ports:
      - "${FLOWER_PORT:-5555}:${FLOWER_PORT:-5555}"
    env_file:
      - .env
    depends_on:
      - task-manager-server
      - redis
      - worker-celery
    networks:
      - default

  redis:
    container_name: task_manager_redis
    image: redis:latest
    healthcheck:
      test: redis-cli ping || exit 1
    ports:
      - "${REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
    restart: always
    networks:
      - default

networks:
  default:
    driver: bridge
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 172.34.0.0/16

volumes:
  app_data:
